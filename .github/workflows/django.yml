name: Django CI/CD to PythonAnywhere (SSH)

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest
    env:
      PA_USER: ${{ secrets.PA_USERNAME }}
      PROJECT_DIR: ${{ secrets.PA_PROJECT_DIR }}
      VENV_NAME: ${{ secrets.PA_VENV_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt --no-cache-dir
          pip list

      - name: Run Django tests
        run: |
          python manage.py check --deploy
          python manage.py test --noinput
        env:
          DJANGO_SETTINGS_MODULE: sustainableCampus.settings
          DJANGO_SECRET_KEY: "dummy-for-tests"
          DATABASE_URL: "sqlite:///:memory:"

      - name: SSH Setup
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Execute Deployment
        run: |
          ssh-keyscan -H ssh.pythonanywhere.com >> ~/.ssh/known_hosts
          
          ssh -o StrictHostKeyChecking=no ${PA_USER}@ssh.pythonanywhere.com << 'DEPLOY'
          # 基础操作
          cd $PROJECT_DIR || { echo "Project directory missing"; exit 1; }
          git reset --hard HEAD
          git clean -fd
          git pull origin main

          # Python环境
          if ! workon $VENV_NAME; then
            echo "Failed to activate virtualenv $VENV_NAME"
            exit 1
          fi

          # 依赖管理
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt --no-cache-dir

          # Django操作
          python manage.py check --deploy
          python manage.py migrate --noinput
          python manage.py collectstatic --noinput --clear

          # 重载应用
          reload_webapp || touch ~/reload.trigger

          # 健康检查
          curl -s http://${PA_USER}.pythonanywhere.com/healthcheck | grep OK
          DEPLOY

      - name: Post-Deploy Verification
        run: |
          echo "Latest commit deployed:"
          ssh -o StrictHostKeyChecking=no ${PA_USER}@ssh.pythonanywhere.com \
            "cd $PROJECT_DIR && git log -1 --pretty='%h - %an - %s'"
